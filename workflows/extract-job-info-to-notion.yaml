name: extract-job-info-to-notion
apiRevision: edurata.io/v1
description: Workflow to read a job description from a Notion page, extract key job details using GPT-3.5, and create a new job card in a Notion board.

interface:
  inputs:
    properties:
      notion_page_id:
        type: string
        description: "The Notion page ID containing the job description."
      notion_database_id:
        type: string
        description: "The Notion database ID where the job card will be created."
  outputs:
    properties:
      job_info:
        type: object
        description: "Extracted job information as JSON."
      notion_card:
        type: object
        description: "Details of the created Notion card."

steps:
  get-job-description:
    description: Retrieve the job description from the specified Notion page.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: GET
      url: "https://api.notion.com/v1/blocks/${inputs.notion_page_id}/children"
      headers:
        Authorization: "Bearer ${secrets.NOTION_API_KEY}"
        Notion-Version: "2022-06-28"

  extract-job-info:
    description: Extract job details using OpenAI GPT-3.5.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: POST
      url: "https://api.openai.com/v1/chat/completions"
      headers:
        Authorization: "Bearer ${secrets.OPENAI_API_KEY}"
        Content-Type: "application/json"
      data:
        model: "gpt-3.5-turbo"
        messages:
          - role: "system"
            content: |
              You are an AI agent designed to extract key details from job descriptions. Based on the following job description, provide the information in JSON format with these fields:
              - "Company Name": string
              - "Job Name": string - Bring the complete name including field, if provided
              - "Language": string (e.g., "English, German") - If multiple languages, separate by comma
              - "Working Model": string (e.g., "Remote, Hybrid, Office") - If mentioned that hybrid or remote is possible, bring this possibility
              - "Location": string (e.g., city name where office is based, "Remote" is not applicable)
              - "Role": string (e.g., "Software Engineer", "Project Manager", "Developer")
              - "Short Job Description": string (1-2 sentences summary)
              - "Salary Expectation": number - without "" (salary expectation in euros per year, if unavailable make a guess based on seniority)

              Job Description:
              ${get-job-description.response.data.results[*].paragraph.rich_text[*].plain_text}

              Respond in JSON format only.
        temperature: 0.7
        max_tokens: 500

  get-current-iso-time:
    runtime: python3_10
    code: |
      import datetime

      def handler(inputs):
          return {
              "iso_time": datetime.datetime.now().isoformat()
          }

  create-notion-card:
    description: Create a new job card in the specified Notion database.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: POST
      url: "https://api.notion.com/v1/pages"
      headers:
        Authorization: "Bearer ${secrets.NOTION_API_KEY}"
        Notion-Version: "2022-06-28"
        Content-Type: "application/json"
      data:
        parent:
          database_id: ${inputs.notion_database_id}
        properties:
          "Company Name":
            title:
              - text:
                  content: ${extract-job-info.response.data.choices[0].message.content.Company Name}
          "Status":
            status:
              name: "Not applied"
          "Date":
            date:
              start: ${get-current-time.iso_time}
          "Job Name":
            rich_text:
              - text:
                  content: ${extract-job-info.response.data.choices[0].message.content.Job Name}
          "Job Description":
            rich_text:
              - text:
                  content: ${extract-job-info.response.data.choices[0].message.content.Short Job Description}
          "Language":
            rich_text:
              - text:
                  content: ${extract-job-info.response.data.choices[0].message.content.Language}
          "Model":
            rich_text:
              - text:
                  content: ${extract-job-info.response.data.choices[0].message.content.Working Model}
          "Location":
            rich_text:
              - text:
                  content: ${extract-job-info.response.data.choices[0].message.content.Location}
          "Role":
            rich_text:
              - text:
                  content: ${extract-job-info.response.data.choices[0].message.content.Role}
          "Salary Expectation":
            number: ${extract-job-info.response.data.choices[0].message.content.Salary Expectation}